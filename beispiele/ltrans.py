# LOGO TRANSLATOR (translates from german to english Logo)
befehle = {
		"VW" : "FD" ,
"RE" : "RT" ,
"LI" : "LT" ,
"PR" : "TO" ,
"LOESCHEBILD" : "CLEAN" ,
"RI" : "TOWARDS" ,
"BILD" : "CS" ,
"RAND" : "FENCE" ,
"FUELLE" : "FILL" ,
"KURS" : "HEADING" ,
"VI" : "HT" ,
"MITTE" : "HOME" ,
"STIFTZ" : "PENSIZE" ,
"FARBEZ" : "PENCOLOR" ,
"SA" : "PD" ,
"RD" : "PE" ,
"SR" : "PX" ,
"SH" : "PU" ,
"ORT" : "POS" ,
"SKALAZ" : "SCRUNCH" ,
"DZ" : "PRINT" ,
"AK" : "SETHEADING" ,
"FARBE" : "SETPC" ,
"AUF" : "SETPOS" ,
"SKALA" : "SETSCRUNCH" ,
"AUFX" : "SETX" ,
"AUFY" : "SETY" ,
"ZI" : "SHOWTURTLE" ,
"FENSTER" : "WINDOW" ,
"RANDSPRUNG" : "WRAP" ,
"OE" : "BF" ,
"OL" : "BL" ,
"ZEICHEN" : "CHAR" ,
"LAENGE" : "COUNT" ,
"LEER?" : "EMPTYP" ,
"GLEICH?" : "EQUALP" ,
"ME" : "FPUT" ,
"EL" : "ITEM" ,
"LZ" : "LAST" ,
"LISTE" : "LIST" ,
"LISTE?" : "LISTP" ,
"ML" : "LPUT" ,
"EL?" : "MEMBERP" ,
"ZAHL?" : "NUMBERP" ,
"SATZ" : "SE" ,
"WORT" : "WORD" ,
"WORT?" : "WORDP" ,
"LOKAL" : "LOCAL" ,
"SETZE" : "MAKE" ,
"VORHER?" : "BEFOREP" ,
"SMALE" : "PPT" ,
"SICHTBAR?" : "SHOWNP" ,
"NAME?" : "NAMEP" ,
"WERT" : "THING" ,
"DIFFERENZ" : "DIFFERENCE" ,
"ZAHLFORMAT" : "FORM" ,
"POTENZ" : "POWER" ,
"^" : "POWER" ,
"PRODUKT" : "PRODUCT" ,
"ZZ" : "RANDOM" ,
"REST" : "REMAINDER" ,
"SZ" : "RERANDOM" ,
"RUNDE" : "ROUND" ,
"QW" : "SQRT" ,
"SUMME" : "SUM" ,
"DEF" : "DEFINE" ,
"DEF?" : "DEFINEDP" ,
"GRUNDWORT?" : "PRIMITIVEP" ,
"ARRAY?" : "ARRAYP" ,
"MAKRO?" : "MACROP" ,
"NEUBILD" : "CLEAN" ,
"NB" : "CLEAN" ,
"FANGE" : "CATCH" ,
"WT" : "CO" ,
"FEHLER" : "ERROR" ,
"WENN" : "IF" ,
"WF" : "IFF" ,
"WW" : "IFT" ,
"WENNSONST" : "IFELSE" ,
"WH" : "REPEAT" ,
"TUE" : "RUN" ,
"PRUEFE" : "TEST" ,
"WIRF" : "THROW" ,
"ALLE?" : "AND" ,
"NICHT?" : "NOT" ,
"EINES?" : "OR" ,
"OFFENZ" : "ALLOPEN" ,
"SCHLIESSE" : "CLOSE" ,
"ADE" : "BYE" ,
"VD" : "ERASEFILE" ,
"LIESTASTE" : "RC" ,
"AER" : "FIRSTS" ,
"OEA" : "BFS" ,
"ELEMENT" : "ITEM" ,
"ELEMENTEAB" : "MEMBER" ,
"ZEIT" : "TIME" ,
"ZEITMILLI" : "TIMEMILLI" ,
"LIESZEICHEN" : "RCS" ,
"DATEIENDE?" : "EOFP" ,
"LL" : "RL" ,
"LESEPOS" : "READPOS" ,
"LW" : "RW" ,
"ZEIGE" : "SHOW" ,
"TON" : "SOUND" ,
"DR" : "TYPE" ,
"WARTE" : "WAIT" ,
"LS" : "CT" ,
"BO" : "CURSOR" ,
"LIESDATEI" : "SETREAD" ,
"VERSTECKE" : "BURY" ,
"VERSTECKT" : "BURIED" ,
"VG" : "ERASE" ,
"LADE" : "LOAD" ,
"ZG" : "PO" ,
"ZT" : "POT" ,
"ANDAUERND" : "FOREVER" ,
"AUFKURS" : "SETHEADING" ,
"BITGR÷ﬂE" : "BITSIZE" ,
"BITGROESSE" : "BITSIZE" ,
"DLLLADEN" : "DLLLOAD" ,
"BW" : "SAVE" ,
"GIBEG" : "PPROP" ,
"MITEG" : "PPROP" ,
"NIMMEG" : "REMPROP" ,
"VGEG" : "REMPROP" ,
"GIB" : "SHOW" ,
"TASTE?" : "KEYP" ,
"WERTEG" : "GPROP" ,
"EGLISTE" : "PLIST" ,
"EGLISTEN" : "PLISTS" ,
"KOPIEEIN" : "SETWRITE" ,
"WIEDERHOLE" : "REPEAT" ,
"ZTL" : "CONTENTS" ,
"TITELLISTE" : "CONTENTS" ,
"PA" : "UNTRACE" ,
"PEIN" : "TRACE" ,
"PSA" : "UNSTEP" ,
"PSE" : "STEP" ,
"IGELORT" : "MOUSEPOS" ,
"AUFXY" : "SETXY" ,
"UND" : "AND" ,
"DLLFREI" : "DLLFREE" ,
"IT" : "LABEL" ,
"IGELTEXT" : "LABEL" ,
"NAMEN" : "NAMES" ,
"PROZEDUREN" : "PROCEDURES" ,
"GROSS" : "UPPERCASE" ,
"KLEIN" : "LOWERCASE" ,
"BITODER" : "BITOR" ,
"BITUND" : "BITAND" ,
"BITXODER" : "BITXOR" ,
"BITNICHT" : "BITNOT" ,
"HERVORHEBEN" : "STANDOUT" ,
"OP" : "OUTPUT" ,
"TUEWERT" : "RUNRESULT" ,
"PL" : "TEXT" ,
"PRLISTE" : "TEXT" ,
"VORWAERTS" : "FD" ,
"RECHTS" : "RT" ,
"LINKS" : "LT" ,
"LIESLISTE" : "READLIST" ,
"WEITER" : "CO" ,
"REMDIR" : "RL" ,
"GANZZAHL" : "INT" ,
"KLEINER?" : "LESSP" ,
"STIFTAB?" : "PENDOWNP" ,
"GROESSER?" : "GREATERP" ,
"BENUTZE" : "APPLY" ,
"L‰NGE" : "COUNT" ,
"PR¸FE" : "TEST" ,
"ALLEERSTES" : "FIRSTS" ,
"DRUCKEZEILE" : "PRINT" ,
"BB" : "BITBLOCK" ,
"WHZAHL" : "REPCOUNT" ,
"LˆSCHEBILD" : "CLEAN" ,
"LˆSCHESCHIRM" : "CS" ,
"LˆSCHETEXT" : "CT" ,
"VORW‰RTS" : "FD" ,
"LB" : "CLEAN" ,
"RADIERE" : "PENERASE" ,
"UMKEHRSTIFT" : "PENREVERSE" ,
"NORMALSTIFT" : "PENPAINT" ,
"PROZEDUR?" : "PROCEDUREP" ,
"STIFTDICKE" : "SETPENSIZE" ,
"FAUSGANG" : "PORTWRITECHAR" ,
"PAUSGANG" : "PORTWRITECHAR" ,
"TASTEG" : "KEYBOARDVALUE" ,
"ZGI" : "SHOWTURTLE" ,
"DZL" : "SHOW" ,


}
def split(delimiters, string, maxsplit=0):
    import re
    regexPattern = '|'.join(map(re.escape, delimiters))
    return re.split(regexPattern, string, maxsplit)

def replace_all(text, dict):
	nt = []
	for key in dict:
   		text = text.replace(key.lower(), dict[key])
   	
   	return text

import sys
f = open(sys.argv[1],"r")
newlines = []
for line in f.readlines():
	print(replace_all(line,befehle))
