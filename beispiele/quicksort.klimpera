PROGRAM quicksort

FUNCTION main():void
VAR a[10000000]:int;
VAR i:int;
VAR n:int;
VAR start,ende:int;
VAR d[10]:char;
BEGIN
	n := 10000000-1;
	
	FOR i := 0 TO n DO
	BEGIN
		a[i] := random(100000);
	END;
	#FOR i := 0 TO n DO
	#BEGIN
	#	printi(a[i]);
	#END;
	printi(0);
	d[0] := readch();
	start := ticcount();
	if d[0] == 'q' THEN 
	BEGIN
		quicksort(a,0,n);
	END;
	IF d[0] == 'b' THEN 
	BEGIN
		bubbleSort(a,n);
	END;
	ende := ticcount();
	#FOR i := 0 TO n DO
	#BEGIN
	#	printi(a[i]);
	#END;
	printch(i2c(13));
	printi(start);
	printi(ende);
	printi(ende-start);
	return;
END

FUNCTION swap(arr[]:int,x:int,y:int):void
VAR temp:int;
BEGIN
	temp := arr[x];
	arr[x] := arr[y];
	arr[y] := temp;
END

FUNCTION quicksort(arr[]:int,left:int,right:int):void 
VAR pivot,new_left,new_right,loop:int;
BEGIN 
	IF left < right THEN
	BEGIN 
		pivot := arr[(left+right)/2];
		new_left := left;
		new_right := right;
		
		loop := 1;
		WHILE loop == 1 DO 
		BEGIN 
			WHILE arr[new_left] < pivot DO 
			BEGIN 
				new_left := new_left+1;
			END;
			
			WHILE pivot < arr[new_right] DO 
			BEGIN
				new_right := new_right-1;
			END;
			
			IF new_left <= new_right THEN
			BEGIN
				swap(arr,new_left,new_right);
				new_left := new_left+1;
				new_right := new_right-1;

			END;
			
			loop := 0;
			IF new_left <= new_right THEN 
			BEGIN
				loop := 1;
			END;
		END;
		
		quicksort(arr,left,new_right);
		quicksort(arr,new_left,right);
	END;
END
FUNCTION bubbleSort(arr[]:int,n:int):void
VAR i,j,t,done: int;

BEGIN
	done := 0;
	WHILE done == 0 DO 
	BEGIN
		done := 1;
		FOR i := 1 TO n DO 
		BEGIN 
			IF arr[i-1] > arr[i] THEN 
			BEGIN
				done := 0;
				t := arr[i-1];
				arr[i-1] := arr[i];
				arr[i] := t;
			END;
		END;
	END;
	return;
END


